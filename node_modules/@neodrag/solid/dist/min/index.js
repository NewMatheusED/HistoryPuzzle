import{onCleanup as t,createEffect as e}from"solid-js";var r={dragStart:!0},n=(t,e={})=>{let n,u,{bounds:f,axis:g="both",gpuAcceleration:h=!0,legacyTranslate:p=!0,transform:m,applyUserSelectHack:y=!0,disabled:b=!1,ignoreMultitouch:w=!1,recomputeBounds:v=r,grid:x,position:E,cancel:S,handle:A,defaultClass:C="neodrag",defaultClassDragging:N="neodrag-dragging",defaultClassDragged:D="neodrag-dragged",defaultPosition:M={x:0,y:0},onDragStart:B,onDrag:$,onDragEnd:R}=e,H=!1,L=0,P=0,T=0,X=0,Y=0,q=0,{x:j,y:k}=E?{x:E?.x??0,y:E?.y??0}:M;Q(j,k);let U,W,z,F,G,I="",J=!!E;v={...r,...v};const K=document.body.style,O=t.classList;function Q(e=L,r=P){if(!m){if(p){let n=`${+e}px, ${+r}px`;return l(t,"transform",h?`translate3d(${n}, 0)`:`translate(${n})`)}return l(t,"translate",`${+e}px ${+r}px ${h?"1px":""}`)}const n=m({offsetX:e,offsetY:r,rootNode:t});i(n)&&l(t,"transform",n)}const V=(e,r)=>{const n={offsetX:L,offsetY:P,rootNode:t,currentNode:G};t.dispatchEvent(new CustomEvent(e,{detail:n})),r?.(n)};const Z=addEventListener;Z("pointerdown",tt,!1),Z("pointerup",et,!1),Z("pointermove",rt,!1),l(t,"touch-action","none");const _=()=>{let e=t.offsetWidth/W.width;return isNaN(e)&&(e=1),e};function tt(e){if(b)return;if(2===e.button)return;if(w&&!e.isPrimary)return;if(v.dragStart&&(U=d(f,t)),i(A)&&i(S)&&A===S)throw new Error("`handle` selector can't be same as `cancel` selector");if(O.add(C),z=function(t,e){if(!t)return[e];if(c(t))return[t];if(Array.isArray(t))return t;const r=e.querySelectorAll(t);if(null===r)throw new Error("Selector passed for `handle` option should be child of the element on which the action is applied");return Array.from(r.values())}(A,t),F=function(t,e){if(!t)return[];if(c(t))return[t];if(Array.isArray(t))return t;const r=e.querySelectorAll(t);if(null===r)throw new Error("Selector passed for `cancel` option should be child of the element on which the action is applied");return Array.from(r.values())}(S,t),n=/(both|x)/.test(g),u=/(both|y)/.test(g),s(F,z))throw new Error("Element being dragged can't be a child of the element on which `cancel` is applied");const r=e.composedPath()[0];if(!z.some((t=>t.contains(r)||t.shadowRoot?.contains(r)))||s(F,[r]))return;G=1===z.length?t:z.find((t=>t.contains(r))),H=!0,W=t.getBoundingClientRect(),y&&(I=K.userSelect,K.userSelect="none"),V("neodrag:start",B);const{clientX:o,clientY:a}=e,l=_();n&&(T=o-j/l),u&&(X=a-k/l),U&&(Y=o-W.left,q=a-W.top)}function et(){H&&(v.dragEnd&&(U=d(f,t)),O.remove(N),O.add(D),y&&(K.userSelect=I),V("neodrag:end",R),n&&(T=L),u&&(X=P),H=!1)}function rt(e){if(!H)return;v.drag&&(U=d(f,t)),O.add(N),e.preventDefault(),W=t.getBoundingClientRect();let r=e.clientX,i=e.clientY;const s=_();if(U){const t={left:U.left+Y,top:U.top+q,right:U.right+Y-W.width,bottom:U.bottom+q-W.height};r=o(r,t.left,t.right),i=o(i,t.top,t.bottom)}if(Array.isArray(x)){let[t,e]=x;if(isNaN(+t)||t<0)throw new Error("1st argument of `grid` must be a valid positive number");if(isNaN(+e)||e<0)throw new Error("2nd argument of `grid` must be a valid positive number");let n=r-T,o=i-X;[n,o]=a([t/s,e/s],n,o),r=T+n,i=X+o}n&&(L=Math.round((r-T)*s)),u&&(P=Math.round((i-X)*s)),j=L,k=P,V("neodrag",$),Q()}return{destroy:()=>{const t=removeEventListener;t("pointerdown",tt,!1),t("pointerup",et,!1),t("pointermove",rt,!1)},update:t=>{g=t.axis||"both",b=t.disabled??!1,w=t.ignoreMultitouch??!1,A=t.handle,f=t.bounds,v=t.recomputeBounds??r,S=t.cancel,y=t.applyUserSelectHack??!0,x=t.grid,h=t.gpuAcceleration??!0,p=t.legacyTranslate??!0,m=t.transform;const e=O.contains(D);O.remove(C,D),C=t.defaultClass??"neodrag",N=t.defaultClassDragging??"neodrag-dragging",D=t.defaultClassDragged??"neodrag-dragged",O.add(C),e&&O.add(D),J&&(j=L=t.position?.x??L,k=P=t.position?.y??P,Q())}}},o=(t,e,r)=>Math.min(Math.max(t,e),r),i=t=>"string"==typeof t,a=([t,e],r,n)=>{const o=(t,e)=>0===e?0:Math.ceil(t/e)*e;return[o(r,t),o(n,e)]};var s=(t,e)=>t.some((t=>e.some((e=>t.contains(e)))));function d(t,e){if(void 0===t)return;if(c(t))return t.getBoundingClientRect();if("object"==typeof t){const{top:e=0,left:r=0,right:n=0,bottom:o=0}=t;return{top:e,right:window.innerWidth-n,bottom:window.innerHeight-o,left:r}}if("parent"===t)return e.parentNode.getBoundingClientRect();const r=document.querySelector(t);if(null===r)throw new Error("The selector provided for bound doesn't exists in the document.");return r.getBoundingClientRect()}var l=(t,e,r)=>t.style.setProperty(e,r),c=t=>t instanceof HTMLElement,u=()=>({draggable:(r,o)=>{const{update:i,destroy:a}=n(r,o());t(a),e((()=>i(o())))}});export{u as createDraggable};